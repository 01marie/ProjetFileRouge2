import pandas as pd
import numpy as np
from scipy.interpolate import interp1d

df = pd.ExcelFile('C:/Users/Laure/Desktop/Cours/Fil Rouge/100Scenarii V3bis.xlsx').parse('BruitageDur')

for numligne in range (0, len(df)):
    Tx_SWP_existants =[]
    for incr_SWP in range(3, 11):
        Tx_SWP_existants.append(df.iloc[0,incr_SWP])
    Mat_SWP_existants = [1,2,5,7,10,15,20,30]
#Tx_SWP_existants
    Mat_SWP_Manquants = [3,4,6,8,9,11,12,13,14,16,17,18,19,21,22,23,24,25,26,27,28,29]
    Tx_SWP_Manquants = np.interp(Mat_SWP_Manquants, Mat_SWP_existants, Tx_SWP_existants)
    Tx = Tx_SWP_existants+Tx_SWP_Manquants.tolist()
    Mat =Mat_SWP_existants+Mat_SWP_Manquants
    Tx_SWP= {'Maturite':pd.Series(Mat, index =Mat),
         'Taux SWAP': pd.Series(Tx, index = Mat)}
    Tx_SWP_ZC=pd.DataFrame(Tx_SWP)
    Tx_SWP_ZC['Discount Factor']=1
    Tx_SWP_ZC['Taux ZC']=0
    #Calcul DF et Taux ZC pour Maturité = 1
    Tx_SWP_ZC.iloc[0,2]=1/(1+Tx_SWP_ZC.iloc[0,1])
    Tx_SWP_ZC.iloc[0,3]=1/Tx_SWP_ZC.iloc[0,2]-1
    for i in range (1,30):
        for j in range (0,i):
            Tx_SWP_ZC.iloc[i,2]=(Tx_SWP_ZC.iloc[i,2]-(Tx_SWP_ZC.iloc[i,1]*Tx_SWP_ZC.iloc[j,2]))
        Tx_SWP_ZC.iloc[i,2]=Tx_SWP_ZC.iloc[i,2]/(1+Tx_SWP_ZC.iloc[i,1])
        Tx_SWP_ZC.iloc[i,3]=Tx_SWP_ZC.iloc[i,2]**(-1/Tx_SWP_ZC.iloc[i,0])-1
    Liste_df.append(Tx_SWP_ZC)